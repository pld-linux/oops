#!/bin/sh
#
# oops		This shell script takes care of starting and stopping
#		Oops!
#
# chkconfig:	345 90 25
#
# description:	Oops!
#
# pidfile:	/var/run/oops.pid
# config:	/etc/oops/oops.cfg


# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Get service config
[ -f /etc/sysconfig/oops ] && . /etc/sysconfig/oops

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network ]; then
		msg_network_down 'Oops!'
		exit 1
	fi
else
	exit 0
fi

# Sanity check
[ -f /etc/oops/oops.cfg ] || exit 0


# See how we were called.
case "$1" in
  start)
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/oops ]; then
		msg_starting 'Oops!'
		busy		
		daemon $SERVICE_RUN_NICE_LEVEL oops -d -c /etc/oops/oops.cfg $OOPS_OPTS
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/oops
	else
		msg_already_running 'Oops!'
		exit 1
	fi
	;;
  stop)
	# Stop daemons.
	if [ -f /var/lock/subsys/oops ]; then
		msg_stopping 'Oops!'
		oopsctl shutdown
		rm -f /var/lock/subsys/oops >/dev/null 2>&1
	else
		msg_not_running 'Oops!'
		exit 1
	fi
	;;
  restart)
	$0 stop
	$0 start
	;;
  reload|force-reload)
	if [ -f /var/lock/subsys/oops ]; then
		msg_reloading 'Oops!'
		busy
		oopsctl reconfigure
		RETVAL=$?
		[ $RETVAL -eq 0 ] && ok || fail
	else
		msg_not_running 'Oops!'
		exit 1
	fi
	;;
  status)
	status oops
	/usr/sbin/oopsctl chkconfig
	/usr/sbin/oopsctl stat
	exit $?
	;;
  init)
	nls "Initializing %s" 'Oops!'
	oops -z -c /etc/oops/oops.cfg
	;;
  *)
	msg_usage "$0 {start|stop|init|restart|reload|force-reload|status}"
	exit 1
esac

exit $RETVAL
